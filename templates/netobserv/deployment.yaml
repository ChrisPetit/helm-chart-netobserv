apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "netobserv.name" . }}
  annotations:
    {{- if .Values.deployment.annotations }}
    {{- toYaml .Values.deployment.annotations | nindent 4 }}
    {{- end }}
  labels:
    {{- include "netobserv.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
    {{- end }}
  selector:
    matchLabels:
      {{- include "netobserv.selectorLabels" . | nindent 6 }}
      {{- if .Values.deployment.labels }}
      {{- toYaml .Values.deployment.labels | nindent 6 }}
      {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "netobserv.labels" . | nindent 8 }}
        {{- if .Values.deployment.labels }}
        {{- toYaml .Values.deployment.labels | nindent 8 }}
        {{- end }}
    spec:
      {{- if (or .Values.serviceAccount.create .Values.serviceAccount.name) }}
      serviceAccountName: {{ include "gitea.serviceAccountName" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
      restartPolicy: Always
      containers:
        - name: {{ include "netobserv.name" . }}
          # image: "elastiflow/flow-collector:{{ .Values.image.tag }}"
          image: "{{ include "netobserv.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.args }}
          args:
            {{- .Values.args | toYaml | nindent 12 }}
          {{- end }}
          env:
          {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: udp
              containerPort: {{ .Values.service.port }}
              protocol: UDP
          {{- if .Values.netobserv.livenessProbe.enabled }}
          livenessProbe:
            {{- toYaml (omit .Values.netobserv.livenessProbe "enabled") | nindent 12 }}
          {{- end }}
          {{- if .Values.netobserv.readinessProbe.enabled }}
          readinessProbe:
            {{- toYaml (omit .Values.netobserv.readinessProbe "enabled") | nindent 12 }}
          {{- end }}
          {{- if .Values.netobserv.startupProbe.enabled }}
          startupProbe:
            {{- toYaml (omit .Values.netobserv.startupProbe "enabled") | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
        affinity:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
        topologySpreadConstraints:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
        tolerations:
          {{- toYaml . | nindent 8 }}
      {{- end }}
