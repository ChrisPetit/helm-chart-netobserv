apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "netobserv.fullname" . }}
  labels:
    {{- include "netobserv.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "netobserv.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "netobserv.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "netobserv.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if or .Values.maxmind.asnEnabled .Values.maxmind.geoipEnabled }}
      initContainers:
        {{- if .Values.maxmind.asnEnabled }}
        - name: download-geolite2-asn
          image: curlimages/curl
          command: ["sh", "-c"]
          args:
            - "cd /data \
              && curl -JL -u {{ .Values.maxmind.accountId }}:{{ .Values.maxmind.licenseKey }} https://download.maxmind.com/geoip/databases/GeoLite2-ASN/download?suffix=tar.gz -o GeoLite2-ASN.tar.gz \
              && tar -xzvf GeoLite2-ASN.tar.gz \
              && rm GeoLite2-ASN.tar.gz"
          volumeMounts:
            - name: geolite2-data
              mountPath: /data
        {{- end }}
        {{- if .Values.maxmind.geoipEnabled }}
        - name: download-geolite2-city
          image: curlimages/curl
          command: ["sh", "-c"]
          args:
            - "cd /data \
              && curl -JL -u {{ .Values.maxmind.accountId }}:{{ .Values.maxmind.licenseKey }} https://download.maxmind.com/geoip/databases/GeoLite2-City/download?suffix=tar.gz -o GeoLite2-City.tar.gz \
              && tar -xzvf GeoLite2-City.tar.gz \
              && rm GeoLite2-City.tar.gz"
          volumeMounts:
            - name: geolite2-data
              mountPath: /data
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.license.createSecret }}
            - name: EF_FLOW_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: netobserv-license
                  key: license
          {{- end }}
          ports:
            - name: udp
              containerPort: {{ .Values.service.port }}
              protocol: UDP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.maxmind.asnEnabled .Values.maxmind.geoipEnabled }}
          volumeMounts:
            - name: geolite2-data
              mountPath: /etc/elastiflow/maxmind
          {{- end }}
      {{- if or .Values.maxmind.asnEnabled .Values.maxmind.geoipEnabled }}
      volumes:
        - name: geolite2-data
          emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
